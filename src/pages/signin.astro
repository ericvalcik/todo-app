---
import { app } from "../firebase/server";
import { getAuth } from "firebase-admin/auth";
import Layout from "../layouts/Layout.astro";
import Spinner from "../components/Spinner.astro";

/* Check if the user is authenticated */
const auth = getAuth(app);
if (Astro.cookies.has("session")) {
  const sessionCookie = Astro.cookies.get("session").value;
  const decodedCookie = await auth.verifySessionCookie(sessionCookie);
  if (decodedCookie) {
    return Astro.redirect("/");
  }
}
---

<Layout title="Sign in" page="sign-in">
  <div class="grow flex items-center">
    <div class="mx-auto w-[260px] pb-40">
      <h1>Sign in</h1>
      <p>New here? <a href="/register">Create an account</a></p>
      <form action="/api/auth/signin-api" method="post" class="flex flex-col">
        <label for="email" class="mt-2">Email</label>
        <input type="email" name="email" id="email" />
        <label for="password" class="mt-2">Password</label>
        <input type="password" name="password" id="password" />
        <button class="mr-auto mt-2" type="submit" id="submit-btn">
          <div class="relative">
            <div class="absolute">
              <Spinner size={20} className="hidden ml-[15px] mt-[2px]" />
            </div>
          </div>
          <span id="login"> Sign in</span>
        </button>
      </form>
    </div>
  </div>
</Layout>
<script>
  import {
    getAuth,
    inMemoryPersistence,
    signInWithEmailAndPassword,
  } from "firebase/auth";
  import { app } from "../firebase/client";

  const auth = getAuth(app);
  // This will prevent the browser from storing session data
  auth.setPersistence(inMemoryPersistence);

  const form = document.querySelector("form") as HTMLFormElement;
  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    const formData = new FormData(form);
    const email = formData.get("email")?.toString();
    const password = formData.get("password")?.toString();

    if (!email || !password) {
      return;
    }
    document.querySelector("#login")?.classList.add("invisible");
    document.querySelector("#submit-btn")?.setAttribute("disabled", "true");
    document.querySelector("#spinner")?.classList.remove("hidden");
    try {
      const userCredential = await signInWithEmailAndPassword(
        auth,
        email,
        password,
      );
      const idToken = await userCredential.user.getIdToken();
      const response = await fetch("/api/auth/signin-api", {
        method: "GET",
        headers: {
          Authorization: `Bearer ${idToken}`,
        },
      });

      if (response.redirected) {
        window.location.assign(response.url);
      }
    } catch (e) {
      console.log(e);
      document.querySelector("#login")?.classList.remove("invisible");
      document.querySelector("#submit-btn")?.removeAttribute("disabled");
      document.querySelector("#spinner")?.classList.add("hidden");
    }
  });
</script>
